// Generated by CoffeeScript 1.8.0
(function(window) {
  var _CSSIsLoaded, _cookies, _el, _hideOpenInPaw, _loadCSS, _p, _showOpenInPaw;
  if (window.paw) {
    return;
  }
  window.addEventListener("keydown", function(e) {
    if (e.keyCode === 27) {
      if (_hideOpenInPaw()) {
        e.preventDefault();
        return false;
      }
    }
  });
  _cookies = {
    getItem: function(sKey) {
      if (!sKey) {
        return null;
      }
      return decodeURIComponent(document.cookie.replace(new RegExp("(?:(?:^|.*;)\\s*" + encodeURIComponent(sKey).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=\\s*([^;]*).*$)|^.*$"), "$1")) || null;
    },
    setItem: function(sKey, sValue, vEnd, sPath, sDomain, bSecure) {
      var sExpires;
      if (!sKey || /^(?:expires|max\-age|path|domain|secure)$/i.test(sKey)) {
        return false;
      }
      sExpires = "";
      if (vEnd) {
        switch (vEnd.constructor) {
          case Number:
            sExpires = (vEnd === Infinity ? "; expires=Fri, 31 Dec 9999 23:59:59 GMT" : "; max-age=" + vEnd);
            break;
          case String:
            sExpires = "; expires=" + vEnd;
            break;
          case Date:
            sExpires = "; expires=" + vEnd.toUTCString();
        }
      }
      document.cookie = encodeURIComponent(sKey) + "=" + encodeURIComponent(sValue) + sExpires + (sDomain != null ? sDomain : "; domain=" + {
        sDomain: ""
      }) + (sPath != null ? sPath : "; path=" + {
        sPath: ""
      }) + (bSecure != null ? bSecure : {
        "; secure": ""
      });
      return true;
    },
    removeItem: function(sKey, sPath, sDomain) {
      if (!this.hasItem(sKey)) {
        return false;
      }
      document.cookie = encodeURIComponent(sKey) + "=; expires=Thu, 01 Jan 1970 00:00:00 GMT" + (sDomain != null ? sDomain : "; domain=" + {
        sDomain: ""
      }) + (sPath != null ? sPath : "; path=" + {
        sPath: ""
      });
      return true;
    },
    hasItem: function(sKey) {
      if (!sKey) {
        return false;
      }
      return (new RegExp("(?:^|;\\s*)" + encodeURIComponent(sKey).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=")).test(document.cookie);
    },
    keys: function() {
      var aKeys, nIdx, _i, _ref;
      aKeys = document.cookie.replace(/((?:^|\s*;)[^\=]+)(?=;|$)|^\s*|\s*(?:\=[^;]*)?(?:\1|$)/g, "").split(/\s*(?:\=[^;]*)?;\s*/);
      for (nIdx = _i = 0, _ref = aKeys.length; 0 <= _ref ? _i <= _ref : _i >= _ref; nIdx = 0 <= _ref ? ++_i : --_i) {
        aKeys[nIdx] = decodeURIComponent(aKeys[nIdx]);
      }
      return aKeys;
    }
  };
  _CSSIsLoaded = false;
  _el = function(t, ens, cb, tout) {
    var en, _called, _cb, _i, _len;
    _called = false;
    _cb = function(e) {
      if (!_called) {
        _called = true;
        return cb(e);
      }
    };
    for (_i = 0, _len = ens.length; _i < _len; _i++) {
      en = ens[_i];
      t.addEventListener(en, _cb);
    }
    if (tout) {
      return setTimeout(_cb, tout);
    }
  };
  _loadCSS = function(href, onload) {
    var ss;
    ss = window.document.createElement("link");
    ss.rel = "stylesheet";
    ss.href = href;
    ss.media = "all";
    ss.onload = function() {
      return setTimeout(onload, 100);
    };
    return document.getElementsByTagName("body")[0].appendChild(ss);
  };
  _hideOpenInPaw = function() {
    var oip, outer;
    outer = document.getElementById("openinpaw-outer");
    if (outer) {
      oip = outer.getElementsByClassName('openinpaw')[0];
      oip.className = "openinpaw fadeout";
      _el(oip, ["animationend", "webkitAnimationEnd"], (function() {
        return outer.style.display = "none";
      }), 500);
      return true;
    }
  };
  _showOpenInPaw = function(document_name, pawlink) {
    var _openInPawHTML, _showOuter;
    _openInPawHTML = function(document_name, pawlink) {
      return "<div class=\"openinpaw-middle\">\n    <div class=\"openinpaw fadein\">\n        <div class=\"hd\">\n            <span class=\"appicon\"></span>\n            Open in <span class=\"appname\">Paw</span>\n        </div>\n        <div class=\"bd\">\n            <span class=\"dc\">Open \"" + document_name + "\" in Paw â€“ the ultimate HTTP client for Mac.</span>\n            <div class=\"scc\"><span class=\"sc\"></span></div>\n            <div class=\"btnblk-container\">\n                <div class=\"btnblk\">\n                    <span>Learn more about Paw</span>\n                    <a href=\"https://luckymarmot.com/paw\" class=\"openinpaw-a-get\" target=\"_blank\">Get Paw</a>\n                </div>\n                <div class=\"btnblk\">\n                    <span>I already have Paw</span>\n                    <a href=\"" + pawlink + "\" class=\"openinpaw-a-open\">Open in Paw</a>\n                    <label>\n                        <input name=\"openinpaw-always-open\" class=\"openinpaw-always-open\" type=\"checkbox\">\n                        Always open in Paw\n                    </span>\n                </div>\n                <div class=\"clr\"></div>\n            </div>\n        </div>\n    </div>\n</div>";
    };
    _showOuter = function() {
      var outer;
      outer = document.getElementById("openinpaw-outer");
      if (!outer) {
        outer = document.createElement("div");
        outer.id = outer.className = "openinpaw-outer";
        document.getElementsByTagName("body")[0].appendChild(outer);
      }
      outer.innerHTML = _openInPawHTML(document_name, pawlink);
      outer.getElementsByClassName('openinpaw')[0].className = "openinpaw fadein";
      outer.style.display = "";
      outer.onclick = function(e) {
        if (e.target === outer || e.target.parentNode === outer) {
          return _hideOpenInPaw();
        }
      };
      return outer.getElementsByClassName('openinpaw-a-open')[0].addEventListener('click', function(e) {
        var chk;
        chk = outer.getElementsByClassName('openinpaw-always-open')[0];
        if (chk && chk.checked) {
          console.log("Set cookie...");
          _cookies.setItem('_haspaw', 'y', Infinity, null, '.localluckymarmot.com');
        }
        e.preventDefault();
        return false;
      });
    };
    if (_CSSIsLoaded) {
      return _showOuter();
    } else {
      _CSSIsLoaded = true;
      _loadCSS("http://fonts.googleapis.com/css?family=Open+Sans:400,300");
      return _loadCSS("http://localluckymarmot.com:8080/stylesheets/paw.css", function() {
        return _showOuter();
      });
    }
  };
  _p = {};
  _p.open = function(d) {
    if (d.deeplink) {
      return _showOpenInPaw(d.apiname || document.title, d.deeplink);
    } else if (d.a) {
      return _showOpenInPaw(d.apiname || d.a.getAttribute('data-paw-api-name') || document.title, d.a.href);
    }
  };
  window.paw = _p;
})(window);
